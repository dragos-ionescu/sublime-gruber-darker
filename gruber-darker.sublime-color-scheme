{
    "name": "Gruber Darker",
    "author": "Drago»ô Ionescu",
    "comments": "The Gruber Darker color scheme for Sublime is inspired by rexim aka Tsoding aka Alexey Kutepov's Gruber Darker theme, which is a darker adaptation of John Gruber's original Gruber Dark theme.",
    "variables":
    {
        "fg":        "#e4e4ef",
        "white":     "#ffffff",
        "black":     "#000000",
        "bg":        "#111217",
        "red":       "#f43841",
        "green":     "#73c936",
        "yellow":    "#ffdd33",
        "brown":     "#cc8c3c",
        "quartz":    "#95a99f",
        "niagara":   "#96a6c8",
        "wisteria":  "#9e95c7",
    },
    "globals":
    {
        "foreground": "var(fg)",
        "background": "var(bg)",

        "caret": "var(yellow)",
        "block_caret": "var(yellow)",
        "block_caret_corner_style": "square",

        "line_highlight": "var(bg)",
        "gutter_foreground_highlight": "var(yellow)",

        "invisibles": "color(var(fg) alpha(0.10))",

        "selection": "color(var(niagara) alpha(35))",
        "selection_foreground": "var(bg)",
        "selection_border": "var(bg)",
        "selection_corner_style": "square",

        "inactive_selection": "color(var(fg) alpha(0.35))",
        "inactive_selection_border": "var(bg)",

        "misspelling": "var(red)",

        "highlight": "var(niagara)",
        "find_highlight": "var(niagara)",
    },
    "rules":
    [
        {
            "name": "Comment",
            "scope": "comment",
            "foreground": "var(brown)"
        },
        {
            "name": "String",
            "scope": "string",
            "foreground": "var(green)"
        },
        {
            "name": "Number",
            "scope": "constant.numeric",
            "foreground": ""
        },
        {
            "name": "Number suffix",
            "scope": "storage.type.numeric",
            "foreground": "",
            "font_style": ""
        },
        {
            "name": "Built-in constant",
            "scope": "constant.language",
            "foreground": "var(yellow)"
        },
        {
            "name": "Keyword",
            "scope": "keyword - (source.c keyword.operator | source.c++ keyword.operator | source.objc keyword.operator | source.objc++ keyword.operator), keyword.operator.word, source.ruby keyword.declaration",
            "foreground": "var(yellow)"
        },
        {
            "name": "User-defined constant",
            "scope": "constant.character, constant.other",
            "foreground": ""
        },
        {
            "name": "Variable",
            "scope": "variable",
            "foreground": ""
        },
        {
            "name": "Annotation Punctuation",
            "scope": "punctuation.definition.annotation",
            "foreground": ""
        },
        {
            "name": "JavaScript Dollar",
            "scope": "variable.other.dollar.only.js",
            "foreground": "var(red)"
        },
        {
            "name": "Storage",
            "scope": "storage",
            "foreground": "var(wisteria)"
        },
        {
            "name": "Storage type",
            "scope": "storage.type",
            "foreground": "var(quartz)",
            "font_style": ""
        },
        {
            "name": "Entity name",
            "scope": "entity.name - (entity.name.filename | entity.name.section | entity.name.tag | entity.name.label)",
            "foreground": ""
        },
        {
            "name": "Inherited class",
            "scope": "entity.other.inherited-class",
            "foreground": "",
            "font_style": ""
        },
        {
            "name": "Function argument",
            "scope": "variable.parameter - (source.c | source.c++ | source.objc | source.objc++)",
            "foreground": "",
            "font_style": ""
        },
        {
            "name": "Language variable",
            "scope": "variable.language",
            "foreground": "",
            "font_style": ""
        },
        {
            "name": "Tag name",
            "scope": "entity.name.tag | meta.mapping.key string.unquoted",
            "foreground": "var(fg)"
        },
        {
            "name": "Tag attribute",
            "scope": "entity.other.attribute-name",
            "foreground": ""
        },
        {
            "name": "Function call",
            "scope": "variable.function, variable.annotation",
            "foreground": ""
        },
        {
            "name": "Library function",
            "scope": "support.function, support.macro",
            "foreground": "var(quartz)"
        },
        {
            "name": "Library constant",
            "scope": "support.constant",
            "foreground": ""
        },
        {
            "name": "Library class/type",
            "scope": "support.type, support.class",
            "foreground": "var(yellow)",
            "font_style": ""
        },
        {
            "name": "Library variable",
            "scope": "support.other.variable"
        },
        {
            "name": "Invalid",
            "scope": "invalid",
            "foreground": "",
            "background": ""
        },
        {
            "name": "Invalid deprecated",
            "scope": "invalid.deprecated",
            "foreground": "",
            "background": "var()"
        },
        {
            "name": "JSON String",
            "scope": "meta.structure.dictionary.json string.quoted.double.json",
            "foreground": "var(yellow)"
        },
        {
            "name": "YAML String",
            "scope": "string.unquoted.yaml",
            "foreground": "var(white)"
        },
        {
            "name": "diff.header",
            "scope": "meta.diff, meta.diff.header",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup headings",
            "scope": "markup.heading",
            "font_style": "bold"
        },
        {
            "name": "markup headings",
            "scope": "markup.heading punctuation.definition.heading",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup h1",
            "scope": "markup.heading.1 punctuation.definition.heading",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup links",
            "scope": "markup.underline.link",
            "foreground": "var(wisteria)"
        },
        {
            "name": "markup bold",
            "scope": "markup.bold",
            "font_style": "bold"
        },
        {
            "name": "markup italic",
            "scope": "markup.italic",
            "font_style": "italic"
        },
        {
            "name": "markup underline",
            "scope": "markup.underline",
            "font_style": "underline"
        },
        {
            "name": "markup bold/italic",
            "scope": "markup.italic markup.bold | markup.bold markup.italic",
            "font_style": "bold italic"
        },
        {
            "name": "markup bold/underline",
            "scope": "markup.underline markup.bold | markup.bold markup.underline",
            "font_style": "bold underline"
        },
        {
            "name": "markup italic/underline",
            "scope": "markup.underline markup.italic | markup.italic markup.underline",
            "font_style": "italic underline"
        },
        {
            "name": "markup bold/italic/underline",
            "scope": "markup.bold markup.italic markup.underline | markup.bold markup.underline markup.italic | markup.italic markup.bold markup.underline | markup.italic markup.underline markup.bold | markup.underline markup.bold markup.italic | markup.underline markup.italic markup.bold",
            "font_style": "bold italic underline"
        },
        {
            "name": "markup hr",
            "scope": "punctuation.definition.thematic-break",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup blockquote",
            "scope": "markup.quote punctuation.definition.blockquote",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup bullets",
            "scope": "markup.list.numbered.bullet",
            "foreground": "var()"
        },
        {
            "name": "markup bullets",
            "scope": "markup.list.unnumbered.bullet | (markup.list.numbered punctuation.definition)",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "markup code",
            "scope": "markup.raw",
            "background": "color(var(white) alpha(0.094))"
        },
        {
            "name": "markup punctuation",
            "scope": "markup.raw punctuation.definition.raw",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "markup punctuation",
            "scope": "text & (punctuation.definition.italic | punctuation.definition.bold | punctuation.definition.raw | punctuation.definition.link | punctuation.definition.metadata | punctuation.definition.image | punctuation.separator.table-cell | punctuation.section.table-header | punctuation.definition.constant)",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "diff.deleted",
            "scope": "markup.deleted",
            "foreground": "var(red)"
        },
        {
            "name": "diff.inserted",
            "scope": "markup.inserted",
            "foreground": "var(yellow)"
        },
        {
            "name": "diff.changed",
            "scope": "markup.changed",
            "foreground": "var(yellow)"
        },
        {
            "scope": "constant.numeric.line-number.find-in-files - match",
            "foreground": "color(var() alpha(0.63))"
        },
        {
            "scope": "entity.name.filename",
            "foreground": "var(yellow)"
        },
        {
            "scope": "message.error",
            "foreground": "var(red)"
        },
        {
            "scope": "message.warning",
            "foreground": "var()"
        },
        {
            "scope": "message.info",
            "foreground": "var()"
        },

        {
            "scope": "diff.deleted",
            "background": "hsla(338, 50%, 56%, 0.15)",
            "foreground_adjust": "l(+ 5%)"
        },
        {
            "scope": "diff.deleted.char",
            "background": "hsla(338, 65%, 56%, 0.30)",
            "foreground_adjust": "l(+ 10%)"
        },
        {
            "scope": "diff.inserted",
            "background": "hsla(80, 50%, 53%, 0.15)",
            "foreground_adjust": "l(+ 5%)"
        },
        {
            "scope": "diff.inserted.char",
            "background": "hsla(80, 65%, 53%, 0.30)",
            "foreground_adjust": "l(+ 10%)"
        },
    ]
}
